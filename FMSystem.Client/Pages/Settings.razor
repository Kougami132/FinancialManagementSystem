@page "/settings"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient Http
@inject MessageService messageService

<PageTitle Title="个人中心 - 个人财务管理系统" />

<div class="back_card">
    <div class="tab-box">
        <Tabs DefaultActiveKey="1" TabPosition="@TabPosition.Left" Style="min-width: 777px;">
            <TabPane Key="1" Tab="个人信息">
                <Row>
                    <Col>
                    <Divider />
                    <Row Style="justify-content: flex-end;">
                        <p>用户名:</p>
                    </Row>
                    <Divider />
                    <Row Style="justify-content: flex-end;">
                        <p>权限:</p>
                    </Row>
                    <Divider />
                    <Row Style="justify-content: flex-end;">
                        <p>QQ:</p>
                    </Row>
                    <Divider />
                    <Row Style="justify-content: flex-end;">
                        <p>邮箱:</p>
                    </Row>
                    <Divider />
                    <Row Style="justify-content: flex-end;">
                        <p>手机号:</p>
                    </Row>
                    <Divider />
                    <Row Style="justify-content: flex-end;">
                        <p>地址:</p>
                    </Row>
                    <Divider />
                    </Col>
                    <Col Flex=@("auto")>
                    <Divider />
                    <Row Style="min-height: 25px;">
                        <p>@self.UserName</p>
                    </Row>
                    <Divider />
                    <Row Style="min-height: 25px;">
                        @{string p = self.Permission == Permissions.ADMIN ? "管理员" : self.Permission == Permissions.NORMAL ? "普通用户" : "其他";}
                        <p>@p</p>
                    </Row>
                    <Divider />
                    <Row Style="min-height: 25px;">
                        <p>@self.QQ</p>
                    </Row>
                    <Divider />
                    <Row Style="min-height: 25px;">
                        <p>@self.Email</p>
                    </Row>
                    <Divider />
                    <Row Style="min-height: 25px;">
                        <p>@self.PhoneNumber</p>
                    </Row>
                    <Divider />
                    <Row Style="min-height: 25px;">
                        <p>@self.Address</p>
                    </Row>
                    <Divider />
                    </Col>
                </Row>
            </TabPane>
            <TabPane Key="2" Tab="修改信息">
                <Form Model="editUser"
                      Loading="loading1"
                      Layout="@FormLayout.Vertical"
                      OnFinish="OnEditInfo">
                    <FormItem Label="用户名">
                        <Input @bind-Value="@context.UserName" />
                    </FormItem>
                    <FormItem Label="QQ">
                        <Input @bind-Value="@context.QQ" />
                    </FormItem>
                    <FormItem Label="邮箱">
                        <Input @bind-Value="@context.Email" />
                    </FormItem>
                    <FormItem Label="手机号">
                        <Input @bind-Value="@context.PhoneNumber" />
                    </FormItem>
                    <FormItem Label="地址">
                        <Input @bind-Value="@context.Address" />
                    </FormItem>
                    <Button Type="primary" HtmlType="submit">
                        保存
                    </Button>
                </Form>
            </TabPane>
            <TabPane Key="3" Tab="修改密码">
                <Form Model="editPwd"
                      Loading="loading2"
                      Layout="@FormLayout.Vertical"
                      OnFinish="OnResetPwd">
                    <div style="margin-bottom: 24px;">
                        <div style="padding-bottom: 8px;">
                            <label style="height: 22px; font-size: 14px;"><span style="color: red;">*</span>&nbsp;旧密码</label>
                        </div>
                        <InputPassword @bind-Value="@oldPwd" Placeholder="例: 123456" MaxLength="32" />
                    </div>
                    <FormItem Label="新密码">
                        <InputPassword @bind-Value="@context.UserPwd" Placeholder="例: 123456" MaxLength="32" />
                    </FormItem>
                    <div style="margin-bottom: 24px;">
                        <div style="padding-bottom: 8px;">
                            <label style="height: 22px; font-size: 14px;"><span style="color: red;">*</span>&nbsp;再次输入新密码</label>
                        </div>
                        <InputPassword @bind-Value="@newPwd" Placeholder="例: 123456" MaxLength="32" />
                    </div>
                    <Button Type="primary" HtmlType="submit">
                        确定
                    </Button>
                </Form>
            </TabPane>
        </Tabs>
    </div>
</div>

<style>
    p {
        font-size: 16px;
        margin: 0 24px
    }
    .tab-box {
        overflow: scroll;
    }
    .tab-box::-webkit-scrollbar {
        display: none;
    }
</style>



@code{

    private bool loading1, loading2;
    private User self = new();
    private User editUser = new();
    private User editPwd = new();
    private string oldPwd, newPwd;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await authenticationStateTask;
        ClaimsPrincipal user = authState.User;
        self = await Http.GetFromJsonAsync<User>("Api/User/GetSelf");
        editUser = new()
        {
            Id = self.Id,
            Permission = self.Permission,
            UserName = self.UserName,
            UserPwd = self.UserPwd,
            QQ = self.QQ,
            Email = self.Email,
            PhoneNumber = self.PhoneNumber,
            Address = self.Address
        };
        editPwd = new()
        {
            Id = self.Id,
            Permission = self.Permission,
            UserName = self.UserName,
            UserPwd = "",
            QQ = self.QQ,
            Email = self.Email,
            PhoneNumber = self.PhoneNumber,
            Address = self.Address
        };
    }

    private async Task OnEditInfo(EditContext editContext)
    {
        loading1 = true;
        Response res = await Http.GetFromJsonAsync<Response>("Api/User/IsUserExist?username=" + editUser.UserName);
        if (res.Msg == "Yes" && editUser.UserName.ToLower() != self.UserName.ToLower())
        {
            messageService.Error("用户名已存在");
            loading1 = true;
            return;
        }

        HttpResponseMessage responseMsg = await Http.PostAsJsonAsync("Api/User/EditUser", editUser);
        Response response = await responseMsg.Content.ReadFromJsonAsync<Response>();
        if (response.Type == 1)
        {
            self = editUser;
            loading1 = false;
            messageService.Success("提交成功,如已修改用户名请重新登录");
        }
        else
        {
            loading1 = false;
            messageService.Error("提交失败");
        }
    }

    private async Task OnResetPwd(EditContext editContext)
    {
        if (oldPwd != self.UserPwd)
        {
            messageService.Error("旧密码错误");
            oldPwd = "";
            return;
        }
        else if (newPwd != editPwd.UserPwd)
        {
            messageService.Error("两次密码输入不一致");
            newPwd = "";
            return;
        }

        loading2 = true;
        HttpResponseMessage responseMsg = await Http.PostAsJsonAsync("Api/User/EditUser", editPwd);
        Response response = await (responseMsg).Content.ReadFromJsonAsync<Response>();
        if (response.Type == 1)
        {
            self = editPwd;
            loading2 = false;
            messageService.Success("修改成功");
            oldPwd = "";
            newPwd = "";
            editPwd.UserPwd = "";
        }
        else
        {
            loading2 = false;
            messageService.Error("修改失败");
        }
    }
}