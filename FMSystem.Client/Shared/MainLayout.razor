@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject HttpClient Http
@using System.Security.Claims

<Layout Style="height: 100vh;">
    <Header Class="header">
        <div class="logo">
            <p>个人财务管理系统</p>
        </div>
        <div class="site-button-ghost-wrapper auth">
            <AuthorizeView>
                <Authorized>
                    你好, <b>@context.User.Identity.Name</b> !
                    <Button Type="link" Danger OnClick="@(() => { navigationManager.NavigateTo("/logout"); })">注销</Button>
                </Authorized>
                <NotAuthorized>
                    <Button Type="link" OnClick="@(() => { navigationManager.NavigateTo("/login"); })">登录</Button>
                    <Button Type="link" OnClick="@(() => { navigationManager.NavigateTo("/register"); })">注册</Button>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </Header>
    <Layout>
        <Sider Width="256" Class="site-layout-background">
            <NavMenu />
        </Sider>
        <Layout Style=" padding: 0 24px 24px;">
            <Content Class="site-layout-background" Style="padding: 24px; margin: 24px 16px 0; min-height: 280px; position: relative;">
                @Body
            </Content>
            <Footer Style="text-align: center;">Copyright © 2021 Kougami<br />Powered by .NET 5.0 on Blazor WebAssembly</Footer>
        </Layout>
    </Layout>
</Layout>

<style>
    * {
        margin: 0;
        padding: 0;
    }

    .logo {
        width: auto;
        height: 32px;
        background: rgba(255, 255, 255, 0.2);
        margin: 16px 0;
        float: left;
    }

        .logo p {
            line-height: 20px;
            font-size: 20px;
            color: white;
            margin: 6px 10px 6px 10px;
        }

    .auth {
        color: white;
        float: right;
    }

    .site-layout-background {
        background: #fff;
    }
</style>

@code{
    
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await authenticationStateTask;
        ClaimsPrincipal user = authState.User;
        if (!user.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/login");
        }
    }
}